<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE IDCARD SYSTEM "IDCARD.dtd">
<IDCARD>
  <CIDCardTemplate nMainDocumentID="1017" chDocumentName="临时海员证" engDocumentName="Temporary Seafarer's Passport(PRC)" imageSizeType="0">
		<vecProcessImage>
	    <CProcessImage processType="1">
        <CTrueColorToGrayEx nFilter="0">
        <RECT Top="0" Right="0" Bottom="0" Left="0" />
        </CTrueColorToGrayEx>
      </CProcessImage>
		</vecProcessImage>
		<vecRegion>
			<!--CRegion:区域信息
				nIndex:区域编号
				nRegionType:区域类型,0代表头像区域,1代表识别区域
				nProcessOrder:该区域被处理的顺序



				rcPosition 坐标均为占整张图像的百分比*10000
			-->
			
			<CRegion nIndex="0" nRegionType="1" nProcessOrder="0">
				<!--处理该区域需要的图像信息的光的类型-->
				<vecImageLightType>
				  <!--1:可见光图;2:红外光图;4:紫外光图 -->
				  <LIGHTTYPE>2</LIGHTTYPE>
				  <LIGHTTYPE>1</LIGHTTYPE>
				</vecImageLightType>
				
				<!--定义区域的定位信息,如果是头像区域还需要进一步精确定位，识别区域就不用了-->
				<!--bAccurateLocate为1表示需要进一步精确定位,0代表不需要-->
				<CLocateRegion bAccurateLocate="0">
				  <vecProcessImage></vecProcessImage>
				  <!--rcMinRect:指定定位区域的最小范围，即定位后的区域范围必须包含这个区域-->
				  <RECT Left="9900" Top="9990" Right="0" Bottom="0" />
				  <vecAnchorLocateInfo>
					<!--nDisToAnchor的值也是整图的百分比*10000计算出来的-->
					<CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="1377" anchorType="1" />
					<CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="7104" anchorType="2" />					
					<CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="1200" anchorType="3" />
					<CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="2742" anchorType="4" />
				  </vecAnchorLocateInfo>
				  <!--该区域定义的区域类型基准点的信息-->
				  <vecCLocateAnchor>
				     				     
				  </vecCLocateAnchor>				  
				</CLocateRegion>
				
				<CLocateLine>
					<!--rcHorizontal：进行行的左右边界定位时的区域范围，坐标单位为所在区域的百分比*100-->
					<RECT Left="0" Top="0" Right="100" Bottom="100" />
				    <!--rcVertical：进行行的上下边界定位时的区域范围，坐标单位为所在区域的百分比*100-->
					<RECT Left="30" Top="0" Right="80" Bottom="100" />
					
					<!--nLocateMethod:0灰度变化的方式进行行定位;1投影方式进行行定位-->
					<!--bHeight:是否等高-->
                    <!--bSpace:是否等间距-->
				    <!--bWidth:是否等宽-->
					<!--nMinElementNum:该行最少元素数-->
					<!--nMaxElementNum:该行最多元素数-->
					<!--nMinWidth:元素的最小宽度-->
					<!--nMaxWidth:元素的最大宽度-->
					<!--nMinHeight:元素的最小高度-->
					<!--nMaxHeight:元素的最大高度-->
					<!--nMinSpace:元素间的最小间距-->
					<!--nMaxSpace:元素间的最大间距-->
					<CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="130" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="1" nMaxElementNum="2" nMinWidth="2000" nMaxWidth="6000" nMinHeight="200" nMaxHeight="457" nMinSpace="40" nMaxSpace="200" bPostProcess="0">
						<vecCLocateMethod>
						  <CLocateMethod nLocateMethod="0">
							<!--在定位前进行的预处理信息，一般是二值化-->
							<vecProcessImage>
							  <CProcessImage processType="1">
								<CTrueColorToGrayEx nFilter="0">
								  <RECT Top="0" Right="0" Bottom="0" Left="0" />
								</CTrueColorToGrayEx>
							  </CProcessImage>
							</vecProcessImage>							
						  </CLocateMethod>
						  
						  <CLocateMethod nLocateMethod="1">
							  <vecProcessImage>
								  <CProcessImage processType="1">
									<CTrueColorToGrayEx nFilter="0">
									  <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
									</CTrueColorToGrayEx>
								  </CProcessImage>
								  <CProcessImage processType="2">
									<CGrayToBinaryEx>
									  <vecBinaryParam>
										<BINARYPARAM nBlockNum="1" nMethod="7" />
										<BINARYPARAM nBlockNum="1" nMethod="6" />
									  </vecBinaryParam>
									  <!--processRect-->
									  <RECT Left="0" Top="0" Right="0" Bottom="0" />
									</CGrayToBinaryEx>
								  </CProcessImage>
							  </vecProcessImage>
						  </CLocateMethod>						  
						</vecCLocateMethod>
					</CLocateInfo>
					
					<!--采用定位算法对行定位后，边界要浮动的大小，可以为负数
					也是整图的百分比*10000计算出来的-->
				    <positionPlus nLeftPlus="-120" nRightPlus="150" nTopPlus="-120" nBottomPlus="150" />
				    
				</CLocateLine>
				
				<vecLine>
				<!--nIndex:该行在区域内是第几行，以第一行或者最后一行为基准从0开始的偏移-->
			    <!--bStartOffset:如果是以区域的第一行为基准，该值为true,否则为false-->
			    <!--bEndOffset:如果是以区域的最后一行为基准，该值为false，否则为false-->
			    <!--bExist:false代表该行可能不存在，ture代表该行存在-->
			    <!--bNeedRecog:false代表该行不需要识别，true代表需要识别-->
			    <!--nLineType:0代表不需要识别，1代表需要识别-->
			  <CLine nIndex="0" bStartOffset="1" bEndOffset="0" bExist="1" bNeedRecog="1" nCheckKeyWord="0" >
					<!--rcLineResult:行的初始位置信息，初始值尽量写最小的区域范围，这样最准确
						    如果都为0代表该值不可靠，坐标单位为坐标均为占整张图像的百分比*10000
						-->
					<RECT Left="0" Top="0" Right="0" Bottom="0" />
					
					<vecRecogInfo>
<CRecogInfo bIgnorePoint="0" nMaxPointWidth="0" nMaxPointHeight="0" bMatchRegExp="0" charOrder="临时入境许可" bConfirmParams="0" nProcessOrder="0" nKernelType="0">
					<!--定位字符的信息-->
				    <!--nLocateMethod:  0,用识别核心做定位;
													1，提取连通域的方法进行定位;
													2，投影方法进行定位	
								-->
				    <!--bHeight:是否等高-->
				    <!--bSpace:是否等间距-->
				    <!--bWidth:是否等宽-->
				    <!--nMinElementNum:该行最少元素数-->
				    <!--nMaxElementNum:该行最多元素数-->
				    <!--nMinWidth:元素的最小宽度-->
				    <!--nMaxWidth:元素的最大宽度-->
				    <!--nMinHeight:元素的最小高度-->
				    <!--nMaxHeight:元素的最大高度-->
				    <!--nMinSpace:元素间的最小间距-->
				    <!--nMaxSpace:元素间的最大间距-->
						<CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="130" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="1" nMaxElementNum="7" nMinWidth="340" nMaxWidth="500" nMinHeight="530" nMaxHeight="650" nMinSpace="20" nMaxSpace="200" bPostProcess="1">
							<vecCLocateMethod>
								<CLocateMethod nLocateMethod="1">
									<vecProcessImage>
									  <CProcessImage processType="1">
										<CTrueColorToGrayEx nFilter="0">
										  <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
										</CTrueColorToGrayEx>
									  </CProcessImage>
									  <CProcessImage processType="2">
										<CGrayToBinaryEx>
										  <vecBinaryParam>
											<BINARYPARAM nBlockNum="1" nMethod="6" />
										  </vecBinaryParam>
										  <!--processRect-->
										  <RECT Left="0" Top="0" Right="0" Bottom="0" />
										</CGrayToBinaryEx>
									  </CProcessImage>
									</vecProcessImage>
								  </CLocateMethod>
								  							
							</vecCLocateMethod>
						</CLocateInfo>
						
						<vecKernal>
							<!--nRecogType:0识别区域，1识别字符, 2都可以-->
							<!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
							<CKernalInfo kernalMainType="1" nKernalSubType="7" nFilterType="1" nFillingMethod="0" strFilterPlus="" nRecogType="1" nRecogImgeType="0">	
                                <vecCharRatio>
                                	<CCharRatio strChars="" charType="1" nWHRatio="100" />
                                </vecCharRatio>									
							</CKernalInfo>
						</vecKernal>						
					</CRecogInfo>
</vecRecogInfo>
<!--nRecogType:0识别区域，1识别字符-->
					<!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
					<!--cellRecogType:识别内容
									NAMECH=0,//中文姓名
									SEX=1,//性别
									NATION=2,//民族
									BIRTHDAY=3,//出生日期
									ISSUINGDATE=4,//签发日期
									VALIDPERIOD=5,//有效期至
									ADDRESSS=6,//地址
									IDNUMBER=7,//身份证号码	
									PPMRZ1=8,//护照类型证件的机读码第一行	
									PPMRZ2=9,//护照类型证件的机读码第二行	
									OTHER=10//其他类型	
								-->
								
					<!--charOrder:字符的排列情况，用正则表达式表示-->
					<!--kernalMainType识别核心主类型 
										THOCR=1,
										SSFT152=2,
										BARCODE=3
								-->	
					<!-- bIgnorePoint 是否忽略等小字符
						nMaxPointWidth:忽略的小字符的最大宽度


                        bMatchRegExp：是否使用正则匹配 
						bConfirmParams：是否需要根据实际情况确认切分参数


						-->
					<!--vecRecogUnit:行内识别单元的信息-->
					<vecRecogUnit>
						<!--nIndex:识别单元序号-->
					    <!--cellNameEng="" cellName:识别单元名称-->
					    <!--bLocate:该识别单元是否需要定位-->
					    <!--bReRecog:该识别单元是否需要重新识别-->
					    <!--OutputThreshold:输出界限一，待输出的识别结果的字频的值不能低于该值-->
					    <!--输出界限二，字频值< OutputThreshold的个数最大不能超过该值，否则将不输出-->
			</vecRecogUnit>	
					
					<!--vecLineKeyWord:记录该行内定义的关键字信息-->
					<vecLineKeyWord>
						<CKeyWord nMinWidth="-1" nMaxHeight="-1" content="临" nMinHeight="-1" nConfirmType="1" nMaxWidth="-1">
							<vecCLocateAnchor>
								<CLocateAnchor nDisToAnchor="0" nAnchorIndex="1" anchorType="2" />
								<!--CLocateAnchor nDisToAnchor="2246" nAnchorIndex="2" anchorType="2" /-->
							
							</vecCLocateAnchor>
						</CKeyWord>
						<CKeyWord nMinWidth="-1" nMaxHeight="-1" content="时" nMinHeight="-1" nConfirmType="1" nMaxWidth="-1">
							<vecCLocateAnchor>
								<CLocateAnchor nDisToAnchor="-520" nAnchorIndex="1" anchorType="2" />
								<!--CLocateAnchor nDisToAnchor="1875" nAnchorIndex="2" anchorType="2" /-->
							</vecCLocateAnchor>
						</CKeyWord>
						<CKeyWord nMinWidth="-1" nMaxHeight="-1" content="入" nMinHeight="-1" nConfirmType="1" nMaxWidth="-1">
							<vecCLocateAnchor>
								<CLocateAnchor nDisToAnchor="-1040" nAnchorIndex="1" anchorType="2" />
								<!--CLocateAnchor nDisToAnchor="1875" nAnchorIndex="2" anchorType="2" /-->
							</vecCLocateAnchor>
						</CKeyWord>
					</vecLineKeyWord>
					
					<vecCLocateAnchor>
					 <CLocateAnchor nDisToAnchor="0" nAnchorIndex="2" anchorType="4" />
					</vecCLocateAnchor>
			    </CLine>
				</vecLine>
			</CRegion>
			
			
			<CRegion nIndex="1" nRegionType="1" nProcessOrder="1">
				<!--处理该区域需要的图像信息的光的类型-->
				<vecImageLightType>
				  <!--1:可见光图;2:红外光图;4:紫外光图 -->
				  <LIGHTTYPE>2</LIGHTTYPE>
				  <LIGHTTYPE>1</LIGHTTYPE>
				</vecImageLightType>
				
				<!--定义区域的定位信息,如果是头像区域还需要进一步精确定位，识别区域就不用了-->
				<!--bAccurateLocate为1表示需要进一步精确定位,0代表不需要-->
				<CLocateRegion bAccurateLocate="0">
				  <vecProcessImage></vecProcessImage>
				  <!--rcMinRect:指定定位区域的最小范围，即定位后的区域范围必须包含这个区域-->
				  <RECT Left="9900" Top="9900" Right="0" Bottom="0" />
				  <vecAnchorLocateInfo>
					<!--nDisToAnchor的值也是整图的百分比*10000计算出来的-->
					<!--CAnchorLocateInfo nAnchorIndex="1" nDisToAnchor="326" anchorType="1" /-->
					<CAnchorLocateInfo nAnchorIndex="1" nDisToAnchor="-177" anchorType="1" />
					<CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="1989" anchorType="1" />
					<CAnchorLocateInfo nAnchorIndex="1" nDisToAnchor="2895" anchorType="2" />  
					<CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="5036" anchorType="2" />
					<CAnchorLocateInfo nAnchorIndex="2" nDisToAnchor="1998" anchorType="3" />					
					<CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="4270" anchorType="3" />
					<CAnchorLocateInfo nAnchorIndex="2" nDisToAnchor="5600" anchorType="4" />
					<CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="7892" anchorType="4" />
				  </vecAnchorLocateInfo>
				  <!--该区域定义的区域类型基准点的信息-->
				  <vecCLocateAnchor>			     
				  </vecCLocateAnchor>				  
				</CLocateRegion>
				
				<CLocateLine>
					<!--rcHorizontal：进行行的左右边界定位时的区域范围，坐标单位为所在区域的百分比*100-->
					<RECT Left="0" Top="0" Right="100" Bottom="100" />
				    <!--rcVertical：进行行的上下边界定位时的区域范围，坐标单位为所在区域的百分比*100-->
					<RECT Left="30" Top="0" Right="80" Bottom="100" />
					
					<!--nLocateMethod:0灰度变化的方式进行行定位;1投影方式进行行定位-->
					<!--bHeight:是否等高-->
                    <!--bSpace:是否等间距-->
				    <!--bWidth:是否等宽-->
					<!--nMinElementNum:该行最少元素数-->
					<!--nMaxElementNum:该行最多元素数-->
					<!--nMinWidth:元素的最小宽度-->
					<!--nMaxWidth:元素的最大宽度-->
					<!--nMinHeight:元素的最小高度-->
					<!--nMaxHeight:元素的最大高度-->
					<!--nMinSpace:元素间的最小间距-->
					<!--nMaxSpace:元素间的最大间距-->
					<CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="130" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="3" nMaxElementNum="3" nMinWidth="400" nMaxWidth="3000" nMinHeight="200" nMaxHeight="360" nMinSpace="500" nMaxSpace="1000" bPostProcess="0">
						<vecCLocateMethod>
						  <CLocateMethod nLocateMethod="0">
							<!--在定位前进行的预处理信息，一般是二值化-->
							<vecProcessImage>
							  <CProcessImage processType="1">
								<CTrueColorToGrayEx nFilter="0">
								  <RECT Top="0" Right="0" Bottom="0" Left="0" />
								</CTrueColorToGrayEx>
							  </CProcessImage>
							</vecProcessImage>							
						  </CLocateMethod>
						  
						  <CLocateMethod nLocateMethod="1">
							  <vecProcessImage>
								  <CProcessImage processType="1">
									<CTrueColorToGrayEx nFilter="0">
									  <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
									</CTrueColorToGrayEx>
								  </CProcessImage>
								  <CProcessImage processType="2">
									<CGrayToBinaryEx>
									  <vecBinaryParam>
										<!--BINARYPARAM nBlockNum="1" nMethod="7" /-->
										<BINARYPARAM nBlockNum="1" nMethod="6" />
									  </vecBinaryParam>
									  <!--processRect-->
									  <RECT Left="0" Top="0" Right="0" Bottom="0" />
									</CGrayToBinaryEx>
								  </CProcessImage>
							  </vecProcessImage>
						  </CLocateMethod>						  
						</vecCLocateMethod>
					</CLocateInfo>
					
					<!--采用定位算法对行定位后，边界要浮动的大小，可以为负数
					也是整图的百分比*10000计算出来的-->
				    <positionPlus nLeftPlus="-120" nRightPlus="100" nTopPlus="-120" nBottomPlus="150" />
				    
				</CLocateLine>
				
				<vecLine>
				<!--nIndex:该行在区域内是第几行，以第一行或者最后一行为基准从0开始的偏移-->
			    <!--bStartOffset:如果是以区域的第一行为基准，该值为true,否则为false-->
			    <!--bEndOffset:如果是以区域的最后一行为基准，该值为false，否则为false-->
			    <!--bExist:false代表该行可能不存在，ture代表该行存在-->
			    <!--bNeedRecog:false代表该行不需要识别，true代表需要识别-->
			    <!--nLineType:0代表不需要识别，1代表需要识别-->
			    <CLine nIndex="0" bStartOffset="1" bEndOffset="0" bExist="1" bNeedRecog="1" nCheckKeyWord="0" >
					<!--rcLineResult:行的初始位置信息，初始值尽量写最小的区域范围，这样最准确
						    如果都为0代表该值不可靠，坐标单位为坐标均为占整张图像的百分比*10000
						-->
					<RECT Left="0" Top="0" Right="0" Bottom="0" />
					
					<vecRecogInfo>
<CRecogInfo bIgnorePoint="0" nMaxPointWidth="0" nMaxPointHeight="0" bMatchRegExp="0" charOrder="\C{1，-1}" bConfirmParams="0" nProcessOrder="0" nKernelType="0">
					<!--定位字符的信息-->
				    <!--nLocateMethod:  0,用识别核心做定位;
													1，提取连通域的方法进行定位;
													2，投影方法进行定位	
								-->
				    <!--bHeight:是否等高-->
				    <!--bSpace:是否等间距-->
				    <!--bWidth:是否等宽-->
				    <!--nMinElementNum:该行最少元素数-->
				    <!--nMaxElementNum:该行最多元素数-->
				    <!--nMinWidth:元素的最小宽度-->
				    <!--nMaxWidth:元素的最大宽度-->
				    <!--nMinHeight:元素的最小高度-->
				    <!--nMaxHeight:元素的最大高度-->
				    <!--nMinSpace:元素间的最小间距-->
				    <!--nMaxSpace:元素间的最大间距-->
						<CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="130" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="5" nMaxElementNum="-1" nMinWidth="40" nMaxWidth="200" nMinHeight="150" nMaxHeight="260" nMinSpace="10" nMaxSpace="260" bPostProcess="1">
							<vecCLocateMethod>
								<CLocateMethod nLocateMethod="1">
									<vecProcessImage>
									  <CProcessImage processType="1">
										<CTrueColorToGrayEx nFilter="0">
										  <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
										</CTrueColorToGrayEx>
									  </CProcessImage>
									  <CProcessImage processType="2">
										<CGrayToBinaryEx>
										  <vecBinaryParam>
											<BINARYPARAM nBlockNum="1" nMethod="6" />
										  </vecBinaryParam>
										  <!--processRect-->
										  <RECT Left="0" Top="0" Right="0" Bottom="0" />
										</CGrayToBinaryEx>
									  </CProcessImage>
									</vecProcessImage>
								  </CLocateMethod>	
							</vecCLocateMethod>
						</CLocateInfo>
						
						<vecKernal>
							<!--nRecogType:0识别区域，1识别字符, 2都可以-->
							<!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
							<CKernalInfo kernalMainType="1" nKernalSubType="11" nFilterType="3" nFillingMethod="0" strFilterPlus="" nRecogType="1" nRecogImgeType="0">
                                <vecCharRatio>	
                                    <CCharRatio strChars="" charType="3" nWHRatio="70" />

                                </vecCharRatio>									
							</CKernalInfo>
						</vecKernal>						
					</CRecogInfo>
</vecRecogInfo>
<!--nRecogType:0识别区域，1识别字符-->
					<!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
					<!--cellRecogType:识别内容
									NAMECH=0,//中文姓名
									SEX=1,//性别
									NATION=2,//民族
									BIRTHDAY=3,//出生日期
									ISSUINGDATE=4,//签发日期
									VALIDPERIOD=5,//有效期至
									ADDRESSS=6,//地址
									IDNUMBER=7,//身份证号码	
									PPMRZ1=8,//护照类型证件的机读码第一行	
									PPMRZ2=9,//护照类型证件的机读码第二行	
									OTHER=10//其他类型	
								-->
								
					<!--charOrder:字符的排列情况，用正则表达式表示-->
					<!--kernalMainType识别核心主类型 
										THOCR=1,
										SSFT152=2,
										BARCODE=3
								-->	
					<!-- bIgnorePoint 是否忽略等小字符
						nMaxPointWidth:忽略的小字符的最大宽度


                        bMatchRegExp：是否使用正则匹配 
						bConfirmParams：是否需要根据实际情况确认切分参数


						-->
					<!--vecRecogUnit:行内识别单元的信息-->
					<vecRecogUnit>
						<!--nIndex:识别单元序号-->
					    <!--cellNameEng="" cellName:识别单元名称-->
					    <!--bLocate:该识别单元是否需要定位-->
					    <!--bReRecog:该识别单元是否需要重新识别-->
					    <!--OutputThreshold:输出界限一，待输出的识别结果的字频的值不能低于该值-->
					    <!--输出界限二，字频值< OutputThreshold的个数最大不能超过该值，否则将不输出-->
					    <CRecogUnit nIndex="1" bLocate="0" bRecog="0">
					    <vecRecogInfo/>
<vecCInsertChar>
							  <CInsertChar nCharPos="-1" strInsert=" " nMinSpace="100" nMaxSpce="200" nInsertType="0"></CInsertChar>
						</vecCInsertChar>
					    </CRecogUnit>					    
					</vecRecogUnit>	
					
					<!--vecLineKeyWord:记录该行内定义的关键字信息-->
					<vecLineKeyWord>	
					  
						
					</vecLineKeyWord>
					 
					<vecCLocateAnchor>
						 
					</vecCLocateAnchor>
			    </CLine>
				<CLine nIndex="1" bStartOffset="1" bEndOffset="0" bExist="1" bNeedRecog="1" nCheckKeyWord="0" >
					<!--rcLineResult:行的初始位置信息，初始值尽量写最小的区域范围，这样最准确
						    如果都为0代表该值不可靠，坐标单位为坐标均为占整张图像的百分比*10000
						-->
					<RECT Left="0" Top="0" Right="0" Bottom="0" />
					
					<vecRecogInfo>
<CRecogInfo bIgnorePoint="0" nMaxPointWidth="0" nMaxPointHeight="0" bMatchRegExp="0" charOrder="\S{2，8}" bConfirmParams="0" nProcessOrder="0" nKernelType="0">
					<!--定位字符的信息-->
				    <!--nLocateMethod:  0,用识别核心做定位;
													1，提取连通域的方法进行定位;
													2，投影方法进行定位	
								-->
				    <!--bHeight:是否等高-->
				    <!--bSpace:是否等间距-->
				    <!--bWidth:是否等宽-->
				    <!--nMinElementNum:该行最少元素数-->
				    <!--nMaxElementNum:该行最多元素数-->
				    <!--nMinWidth:元素的最小宽度-->
				    <!--nMaxWidth:元素的最大宽度-->
				    <!--nMinHeight:元素的最小高度-->
				    <!--nMaxHeight:元素的最大高度-->
				    <!--nMinSpace:元素间的最小间距-->
				    <!--nMaxSpace:元素间的最大间距-->
						<CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="130" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="2" nMaxElementNum="8" nMinWidth="140" nMaxWidth="240" nMinHeight="260" nMaxHeight="400" nMinSpace="10" nMaxSpace="260" bPostProcess="1">
							<vecCLocateMethod>
								<CLocateMethod nLocateMethod="1">
									<vecProcessImage>
									  <CProcessImage processType="1">
										<CTrueColorToGrayEx nFilter="0">
										  <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
										</CTrueColorToGrayEx>
									  </CProcessImage>
									  <CProcessImage processType="2">
										<CGrayToBinaryEx>
										  <vecBinaryParam>
											<BINARYPARAM nBlockNum="1" nMethod="6" />
										  </vecBinaryParam>
										  <!--processRect-->
										  <RECT Left="0" Top="0" Right="0" Bottom="0" />
										</CGrayToBinaryEx>
									  </CProcessImage>
									</vecProcessImage>
								  </CLocateMethod>	
							</vecCLocateMethod>
						</CLocateInfo>
						
						<vecKernal>
							<!--nRecogType:0识别区域，1识别字符, 2都可以-->
							<!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
							<CKernalInfo kernalMainType="1" nKernalSubType="7" nFilterType="1" nFillingMethod="0" strFilterPlus="" nRecogType="1" nRecogImgeType="0">
								<!--charType:	0所有字符

												 1 汉字类；
												 2大小写英文字母、数字，英文字符类 							
                                        -->	
                                        	
                                <vecCharRatio>	
                                    <CCharRatio strChars="" charType="1" nWHRatio="100" />
                                </vecCharRatio>									
							</CKernalInfo>
						</vecKernal>						
					</CRecogInfo>
</vecRecogInfo>
<!--nRecogType:0识别区域，1识别字符-->
					<!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
					<!--cellRecogType:识别内容
									NAMECH=0,//中文姓名
									SEX=1,//性别
									NATION=2,//民族
									BIRTHDAY=3,//出生日期
									ISSUINGDATE=4,//签发日期
									VALIDPERIOD=5,//有效期至
									ADDRESSS=6,//地址
									IDNUMBER=7,//身份证号码	
									PPMRZ1=8,//护照类型证件的机读码第一行	
									PPMRZ2=9,//护照类型证件的机读码第二行	
									OTHER=10//其他类型	
								-->
								
					<!--charOrder:字符的排列情况，用正则表达式表示-->
					<!--kernalMainType识别核心主类型 
										THOCR=1,
										SSFT152=2,
										BARCODE=3
								-->	
					<!-- bIgnorePoint 是否忽略等小字符
						nMaxPointWidth:忽略的小字符的最大宽度


                        bMatchRegExp：是否使用正则匹配 
						bConfirmParams：是否需要根据实际情况确认切分参数


						-->
					<!--vecRecogUnit:行内识别单元的信息-->
					<vecRecogUnit>
						<!--nIndex:识别单元序号-->
					    <!--cellNameEng="" cellName:识别单元名称-->
					    <!--bLocate:该识别单元是否需要定位-->
					    <!--bReRecog:该识别单元是否需要重新识别-->
					    <!--OutputThreshold:输出界限一，待输出的识别结果的字频的值不能低于该值-->
					    <!--输出界限二，字频值< OutputThreshold的个数最大不能超过该值，否则将不输出-->
					    <CRecogUnit nIndex="3" bLocate="0" bRecog="0">
				
					    <vecRecogInfo/>
</CRecogUnit>					    
					</vecRecogUnit>	
					
					<!--vecLineKeyWord:记录该行内定义的关键字信息-->
					<vecLineKeyWord>	
					  
						
					</vecLineKeyWord>
					 
					<vecCLocateAnchor>
						
					</vecCLocateAnchor>
			    </CLine>
				<CLine nIndex="2" bStartOffset="1" bEndOffset="0" bExist="1" bNeedRecog="1" nCheckKeyWord="0" >
					<!--rcLineResult:行的初始位置信息，初始值尽量写最小的区域范围，这样最准确
						    如果都为0代表该值不可靠，坐标单位为坐标均为占整张图像的百分比*10000
						-->
					<RECT Left="0" Top="0" Right="0" Bottom="0" />
					
					<vecRecogInfo>
<CRecogInfo bIgnorePoint="0" nMaxPointWidth="0" nMaxPointHeight="0" bMatchRegExp="1" charOrder="\D{9}" bConfirmParams="0" nProcessOrder="0" nKernelType="0">
					<!--定位字符的信息-->
				    <!--nLocateMethod:  0,用识别核心做定位;
													1，提取连通域的方法进行定位;
													2，投影方法进行定位	
								-->
				    <!--bHeight:是否等高-->
				    <!--bSpace:是否等间距-->
				    <!--bWidth:是否等宽-->
				    <!--nMinElementNum:该行最少元素数-->
				    <!--nMaxElementNum:该行最多元素数-->
				    <!--nMinWidth:元素的最小宽度-->
				    <!--nMaxWidth:元素的最大宽度-->
				    <!--nMinHeight:元素的最小高度-->
				    <!--nMaxHeight:元素的最大高度-->
				    <!--nMinSpace:元素间的最小间距-->
				    <!--nMaxSpace:元素间的最大间距-->
						<CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="130" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="9" nMaxElementNum="9" nMinWidth="20" nMaxWidth="130" nMinHeight="150" nMaxHeight="260" nMinSpace="10" nMaxSpace="260" bPostProcess="1">
							<vecCLocateMethod>
								<CLocateMethod nLocateMethod="1">
									<vecProcessImage>
									  <CProcessImage processType="1">
										<CTrueColorToGrayEx nFilter="0">
										  <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
										</CTrueColorToGrayEx>
									  </CProcessImage>
									  <CProcessImage processType="2">
										<CGrayToBinaryEx>
										  <vecBinaryParam>
											<BINARYPARAM nBlockNum="1" nMethod="6" />
										  </vecBinaryParam>
										  <!--processRect-->
										  <RECT Left="0" Top="0" Right="0" Bottom="0" />
										</CGrayToBinaryEx>
									  </CProcessImage>
									</vecProcessImage>
								  </CLocateMethod>	
							</vecCLocateMethod>
						</CLocateInfo>
						
						<vecKernal>
							<!--nRecogType:0识别区域，1识别字符, 2都可以-->
							<!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
							<CKernalInfo kernalMainType="1" nKernalSubType="7" nFilterType="256" nFillingMethod="0" strFilterPlus="" nRecogType="1" nRecogImgeType="0">
								<!--charType:	0所有字符

												 1 汉字类；
												 2大小写英文字母、数字，英文字符类 							
                                        -->	
                                        	
                                <vecCharRatio>	
									<CCharRatio strChars="" charType="2" nWHRatio="62" />
                                </vecCharRatio>									
							</CKernalInfo>
						</vecKernal>						
					</CRecogInfo>
</vecRecogInfo>
<!--nRecogType:0识别区域，1识别字符-->
					<!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
					<!--cellRecogType:识别内容
									NAMECH=0,//中文姓名
									SEX=1,//性别
									NATION=2,//民族
									BIRTHDAY=3,//出生日期
									ISSUINGDATE=4,//签发日期
									VALIDPERIOD=5,//有效期至
									ADDRESSS=6,//地址
									IDNUMBER=7,//身份证号码	
									PPMRZ1=8,//护照类型证件的机读码第一行	
									PPMRZ2=9,//护照类型证件的机读码第二行	
									OTHER=10//其他类型	
								-->
								
					<!--charOrder:字符的排列情况，用正则表达式表示-->
					<!--kernalMainType识别核心主类型 
										THOCR=1,
										SSFT152=2,
										BARCODE=3
								-->	
					<!-- bIgnorePoint 是否忽略等小字符
						nMaxPointWidth:忽略的小字符的最大宽度


                        bMatchRegExp：是否使用正则匹配 
						bConfirmParams：是否需要根据实际情况确认切分参数


						-->
					<!--vecRecogUnit:行内识别单元的信息-->
					<vecRecogUnit>
						<!--nIndex:识别单元序号-->
					    <!--cellNameEng="" cellName:识别单元名称-->
					    <!--bLocate:该识别单元是否需要定位-->
					    <!--bReRecog:该识别单元是否需要重新识别-->
					    <!--OutputThreshold:输出界限一，待输出的识别结果的字频的值不能低于该值-->
					    <!--输出界限二，字频值< OutputThreshold的个数最大不能超过该值，否则将不输出-->
					    <CRecogUnit nIndex="5" bLocate="0" bRecog="0">
					    <vecRecogInfo/>
</CRecogUnit>					    
					</vecRecogUnit>	
					
					<!--vecLineKeyWord:记录该行内定义的关键字信息-->
					<vecLineKeyWord>	
					
					</vecLineKeyWord>
					 
					<vecCLocateAnchor>
					</vecCLocateAnchor>
			    </CLine>
				
				</vecLine>
			</CRegion>
			<CRegion nIndex="2" nRegionType="1" nProcessOrder="2">
				<!--处理该区域需要的图像信息的光的类型-->
				<vecImageLightType>
				  <!--1:可见光图;2:红外光图;4:紫外光图 -->
				  <LIGHTTYPE>2</LIGHTTYPE>
				  <LIGHTTYPE>1</LIGHTTYPE>
				</vecImageLightType>
				
				<!--定义区域的定位信息,如果是头像区域还需要进一步精确定位，识别区域就不用了-->
				<!--bAccurateLocate为1表示需要进一步精确定位,0代表不需要-->
				<CLocateRegion bAccurateLocate="0">
				  <vecProcessImage></vecProcessImage>
				  <!--rcMinRect:指定定位区域的最小范围，即定位后的区域范围必须包含这个区域-->
				  <RECT Left="9900" Top="9900" Right="0" Bottom="0" />
				  <vecAnchorLocateInfo>
					<!--nDisToAnchor的值也是整图的百分比*10000计算出来的-->
					<!--CAnchorLocateInfo nAnchorIndex="1" nDisToAnchor="326" anchorType="1" /-->
					<CAnchorLocateInfo nAnchorIndex="1" nDisToAnchor="4218" anchorType="1" />
					<CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="6369" anchorType="1" />
					<CAnchorLocateInfo nAnchorIndex="1" nDisToAnchor="5843" anchorType="2" />  
					<CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="8005" anchorType="2" />
					<CAnchorLocateInfo nAnchorIndex="2" nDisToAnchor="1998" anchorType="3" />					
					<CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="4270" anchorType="3" />
					<CAnchorLocateInfo nAnchorIndex="2" nDisToAnchor="5600" anchorType="4" />
					<CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="7892" anchorType="4" />
				  </vecAnchorLocateInfo>
				  <!--该区域定义的区域类型基准点的信息-->
				  <vecCLocateAnchor>			     
				  </vecCLocateAnchor>				  
				</CLocateRegion>
				
				<CLocateLine>
					<!--rcHorizontal：进行行的左右边界定位时的区域范围，坐标单位为所在区域的百分比*100-->
					<RECT Left="0" Top="0" Right="100" Bottom="100" />
				    <!--rcVertical：进行行的上下边界定位时的区域范围，坐标单位为所在区域的百分比*100-->
					<RECT Left="30" Top="0" Right="80" Bottom="100" />
					
					<!--nLocateMethod:0灰度变化的方式进行行定位;1投影方式进行行定位-->
					<!--bHeight:是否等高-->
                    <!--bSpace:是否等间距-->
				    <!--bWidth:是否等宽-->
					<!--nMinElementNum:该行最少元素数-->
					<!--nMaxElementNum:该行最多元素数-->
					<!--nMinWidth:元素的最小宽度-->
					<!--nMaxWidth:元素的最大宽度-->
					<!--nMinHeight:元素的最小高度-->
					<!--nMaxHeight:元素的最大高度-->
					<!--nMinSpace:元素间的最小间距-->
					<!--nMaxSpace:元素间的最大间距-->
					<CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="130" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="3" nMaxElementNum="3" nMinWidth="100" nMaxWidth="2000" nMinHeight="200" nMaxHeight="360" nMinSpace="500" nMaxSpace="1000" bPostProcess="0">
						<vecCLocateMethod>
						  <CLocateMethod nLocateMethod="0">
							<!--在定位前进行的预处理信息，一般是二值化-->
							<vecProcessImage>
							  <CProcessImage processType="1">
								<CTrueColorToGrayEx nFilter="0">
								  <RECT Top="0" Right="0" Bottom="0" Left="0" />
								</CTrueColorToGrayEx>
							  </CProcessImage>
							</vecProcessImage>							
						  </CLocateMethod>
						  
						  <CLocateMethod nLocateMethod="1">
							  <vecProcessImage>
								  <CProcessImage processType="1">
									<CTrueColorToGrayEx nFilter="0">
									  <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
									</CTrueColorToGrayEx>
								  </CProcessImage>
								  <CProcessImage processType="2">
									<CGrayToBinaryEx>
									  <vecBinaryParam>
										<!--BINARYPARAM nBlockNum="1" nMethod="7" /-->
										<BINARYPARAM nBlockNum="1" nMethod="6" />
									  </vecBinaryParam>
									  <!--processRect-->
									  <RECT Left="0" Top="0" Right="0" Bottom="0" />
									</CGrayToBinaryEx>
								  </CProcessImage>
							  </vecProcessImage>
						  </CLocateMethod>						  
						</vecCLocateMethod>
					</CLocateInfo>
					
					<!--采用定位算法对行定位后，边界要浮动的大小，可以为负数
					也是整图的百分比*10000计算出来的-->
				    <positionPlus nLeftPlus="-120" nRightPlus="100" nTopPlus="-120" nBottomPlus="150" />
				    
				</CLocateLine>
				
				<vecLine>
				<!--nIndex:该行在区域内是第几行，以第一行或者最后一行为基准从0开始的偏移-->
			    <!--bStartOffset:如果是以区域的第一行为基准，该值为true,否则为false-->
			    <!--bEndOffset:如果是以区域的最后一行为基准，该值为false，否则为false-->
			    <!--bExist:false代表该行可能不存在，ture代表该行存在-->
			    <!--bNeedRecog:false代表该行不需要识别，true代表需要识别-->
			    <!--nLineType:0代表不需要识别，1代表需要识别-->
			    <CLine nIndex="0" bStartOffset="1" bEndOffset="0" bExist="1" bNeedRecog="1" nCheckKeyWord="0" >
					<!--rcLineResult:行的初始位置信息，初始值尽量写最小的区域范围，这样最准确
						    如果都为0代表该值不可靠，坐标单位为坐标均为占整张图像的百分比*10000
						-->
					<RECT Left="0" Top="0" Right="0" Bottom="0" />
					
					<vecRecogInfo>
<CRecogInfo bIgnorePoint="0" nMaxPointWidth="0" nMaxPointHeight="0" bMatchRegExp="1" charOrder="[男女]" bConfirmParams="0" nProcessOrder="0" nKernelType="0">
					<!--定位字符的信息-->
				    <!--nLocateMethod:  0,用识别核心做定位;
													1，提取连通域的方法进行定位;
													2，投影方法进行定位	
								-->
				    <!--bHeight:是否等高-->
				    <!--bSpace:是否等间距-->
				    <!--bWidth:是否等宽-->
				    <!--nMinElementNum:该行最少元素数-->
				    <!--nMaxElementNum:该行最多元素数-->
				    <!--nMinWidth:元素的最小宽度-->
				    <!--nMaxWidth:元素的最大宽度-->
				    <!--nMinHeight:元素的最小高度-->
				    <!--nMaxHeight:元素的最大高度-->
				    <!--nMinSpace:元素间的最小间距-->
				    <!--nMaxSpace:元素间的最大间距-->
						<CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="130" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="1" nMaxElementNum="1" nMinWidth="140" nMaxWidth="240" nMinHeight="260" nMaxHeight="400" nMinSpace="10" nMaxSpace="260" bPostProcess="1">
							<vecCLocateMethod>
								<CLocateMethod nLocateMethod="1">
									<vecProcessImage>
									  <CProcessImage processType="1">
										<CTrueColorToGrayEx nFilter="0">
										  <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
										</CTrueColorToGrayEx>
									  </CProcessImage>
									  <CProcessImage processType="2">
										<CGrayToBinaryEx>
										  <vecBinaryParam>
											<BINARYPARAM nBlockNum="1" nMethod="6" />
										  </vecBinaryParam>
										  <!--processRect-->
										  <RECT Left="0" Top="0" Right="0" Bottom="0" />
										</CGrayToBinaryEx>
									  </CProcessImage>
									</vecProcessImage>
								  </CLocateMethod>	
							</vecCLocateMethod>
						</CLocateInfo>
						
						<vecKernal>
							<!--nRecogType:0识别区域，1识别字符, 2都可以-->
							<!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
							<CKernalInfo kernalMainType="1" nKernalSubType="7" nFilterType="1" nFillingMethod="0" strFilterPlus="" nRecogType="1" nRecogImgeType="0">
                                <vecCharRatio>	
                                    <CCharRatio strChars="" charType="1" nWHRatio="100" />

                                </vecCharRatio>									
							</CKernalInfo>
						</vecKernal>						
					</CRecogInfo>
</vecRecogInfo>
<!--nRecogType:0识别区域，1识别字符-->
					<!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
					<!--cellRecogType:识别内容
									NAMECH=0,//中文姓名
									SEX=1,//性别
									NATION=2,//民族
									BIRTHDAY=3,//出生日期
									ISSUINGDATE=4,//签发日期
									VALIDPERIOD=5,//有效期至
									ADDRESSS=6,//地址
									IDNUMBER=7,//身份证号码	
									PPMRZ1=8,//护照类型证件的机读码第一行	
									PPMRZ2=9,//护照类型证件的机读码第二行	
									OTHER=10//其他类型	
								-->
								
					<!--charOrder:字符的排列情况，用正则表达式表示-->
					<!--kernalMainType识别核心主类型 
										THOCR=1,
										SSFT152=2,
										BARCODE=3
								-->	
					<!-- bIgnorePoint 是否忽略等小字符
						nMaxPointWidth:忽略的小字符的最大宽度


                        bMatchRegExp：是否使用正则匹配 
						bConfirmParams：是否需要根据实际情况确认切分参数


						-->
					<!--vecRecogUnit:行内识别单元的信息-->
					<vecRecogUnit>
						<!--nIndex:识别单元序号-->
					    <!--cellNameEng="" cellName:识别单元名称-->
					    <!--bLocate:该识别单元是否需要定位-->
					    <!--bReRecog:该识别单元是否需要重新识别-->
					    <!--OutputThreshold:输出界限一，待输出的识别结果的字频的值不能低于该值-->
					    <!--输出界限二，字频值< OutputThreshold的个数最大不能超过该值，否则将不输出-->
					    <CRecogUnit nIndex="2" bLocate="0" bRecog="0">
					   
					    <vecRecogInfo/>
</CRecogUnit>					    
					</vecRecogUnit>	
					
					<!--vecLineKeyWord:记录该行内定义的关键字信息-->
					<vecLineKeyWord>	
					  
						
					</vecLineKeyWord>
					 
					<vecCLocateAnchor>
						 
					</vecCLocateAnchor>
			    </CLine>
				<CLine nIndex="1" bStartOffset="1" bEndOffset="0" bExist="1" bNeedRecog="1" nCheckKeyWord="0" >
					<!--rcLineResult:行的初始位置信息，初始值尽量写最小的区域范围，这样最准确
						    如果都为0代表该值不可靠，坐标单位为坐标均为占整张图像的百分比*10000
						-->
					<RECT Left="0" Top="0" Right="0" Bottom="0" />
					
					<vecRecogInfo>
<CRecogInfo bIgnorePoint="0" nMaxPointWidth="0" nMaxPointHeight="0" bMatchRegExp="1" charOrder="\D{8}" bConfirmParams="0" nProcessOrder="0" nKernelType="0">
					<!--定位字符的信息-->
				    <!--nLocateMethod:  0,用识别核心做定位;
													1，提取连通域的方法进行定位;
													2，投影方法进行定位	
								-->
				    <!--bHeight:是否等高-->
				    <!--bSpace:是否等间距-->
				    <!--bWidth:是否等宽-->
				    <!--nMinElementNum:该行最少元素数-->
				    <!--nMaxElementNum:该行最多元素数-->
				    <!--nMinWidth:元素的最小宽度-->
				    <!--nMaxWidth:元素的最大宽度-->
				    <!--nMinHeight:元素的最小高度-->
				    <!--nMaxHeight:元素的最大高度-->
				    <!--nMinSpace:元素间的最小间距-->
				    <!--nMaxSpace:元素间的最大间距-->
						<CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="130" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="8" nMaxElementNum="8" nMinWidth="20" nMaxWidth="130" nMinHeight="150" nMaxHeight="260" nMinSpace="10" nMaxSpace="260" bPostProcess="1">
							<vecCLocateMethod>
								<CLocateMethod nLocateMethod="1">
									<vecProcessImage>
									  <CProcessImage processType="1">
										<CTrueColorToGrayEx nFilter="0">
										  <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
										</CTrueColorToGrayEx>
									  </CProcessImage>
									  <CProcessImage processType="2">
										<CGrayToBinaryEx>
										  <vecBinaryParam>
											<BINARYPARAM nBlockNum="1" nMethod="6" />
										  </vecBinaryParam>
										  <!--processRect-->
										  <RECT Left="0" Top="0" Right="0" Bottom="0" />
										</CGrayToBinaryEx>
									  </CProcessImage>
									</vecProcessImage>
								  </CLocateMethod>	
							</vecCLocateMethod>
						</CLocateInfo>
						
						<vecKernal>
							<!--nRecogType:0识别区域，1识别字符, 2都可以-->
							<!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
							<CKernalInfo kernalMainType="1" nKernalSubType="7" nFilterType="256" nFillingMethod="0" strFilterPlus="" nRecogType="1" nRecogImgeType="0">
								<!--charType:	0所有字符

												 1 汉字类；
												 2大小写英文字母、数字，英文字符类 							
                                        -->	
                                        	
                                <vecCharRatio>	
									<CCharRatio strChars="" charType="2" nWHRatio="62" />
                                </vecCharRatio>									
							</CKernalInfo>
						</vecKernal>						
					</CRecogInfo>
</vecRecogInfo>
<!--nRecogType:0识别区域，1识别字符-->
					<!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
					<!--cellRecogType:识别内容
									NAMECH=0,//中文姓名
									SEX=1,//性别
									NATION=2,//民族
									BIRTHDAY=3,//出生日期
									ISSUINGDATE=4,//签发日期
									VALIDPERIOD=5,//有效期至
									ADDRESSS=6,//地址
									IDNUMBER=7,//身份证号码	
									PPMRZ1=8,//护照类型证件的机读码第一行	
									PPMRZ2=9,//护照类型证件的机读码第二行	
									OTHER=10//其他类型	
								-->
								
					<!--charOrder:字符的排列情况，用正则表达式表示-->
					<!--kernalMainType识别核心主类型 
										THOCR=1,
										SSFT152=2,
										BARCODE=3
								-->	
					<!-- bIgnorePoint 是否忽略等小字符
						nMaxPointWidth:忽略的小字符的最大宽度


                        bMatchRegExp：是否使用正则匹配 
						bConfirmParams：是否需要根据实际情况确认切分参数


						-->
					<!--vecRecogUnit:行内识别单元的信息-->
					<vecRecogUnit>
						<!--nIndex:识别单元序号-->
					    <!--cellNameEng="" cellName:识别单元名称-->
					    <!--bLocate:该识别单元是否需要定位-->
					    <!--bReRecog:该识别单元是否需要重新识别-->
					    <!--OutputThreshold:输出界限一，待输出的识别结果的字频的值不能低于该值-->
					    <!--输出界限二，字频值< OutputThreshold的个数最大不能超过该值，否则将不输出-->
					    <CRecogUnit nIndex="4" bLocate="0" bRecog="0">
					    <vecRecogInfo/>
</CRecogUnit>					    
					</vecRecogUnit>	
					
					<!--vecLineKeyWord:记录该行内定义的关键字信息-->
					<vecLineKeyWord>	
					
					</vecLineKeyWord>
					 
					<vecCLocateAnchor>
					</vecCLocateAnchor>
			    </CLine>
				<CLine nIndex="2" bStartOffset="1" bEndOffset="0" bExist="1" bNeedRecog="0" nCheckKeyWord="0" >
					<!--rcLineResult:行的初始位置信息，初始值尽量写最小的区域范围，这样最准确
						    如果都为0代表该值不可靠，坐标单位为坐标均为占整张图像的百分比*10000
						-->
					<RECT Left="0" Top="0" Right="0" Bottom="0" />
					
					
			    <vecRecogInfo/>
</CLine>
				</vecLine>
			</CRegion>
			
		</vecRegion>
		<vecDeriveUnit>
			
		</vecDeriveUnit>

		<!--vecCLocateAnchor:  该证件的所有基准点的信息-->
		<!--anchorType: 基准点类型，取值如下：
						ZEROANCHOR=0//(O,0)基准
						LEFT=1 //	左边
						RIGHT =2 //右边
						TOP=3 //上边
						BOTTOM=4 //下边
						-->
		<vecAnchor>
			<!--(0,0)基准点-->
			<CAnchor nIndex="0" anchorType="0" anchorPos="0" bEnable="0" nMinPos="-1" nMaxPos="-1" />
			<!--代码区域定义下基准点-->
			<CAnchor nIndex="1" anchorPos="-1" anchorType="2" bEnable="0" nMinPos="-1" nMaxPos="-1" />
			<!--代码定义左基准点-->
			<CAnchor nIndex="2" anchorPos="-1" anchorType="4" bEnable="0" nMinPos="-1" nMaxPos="-1" />
			
		</vecAnchor>
		
		<vecOutPutResult>
			<COutPutResult nIndex="0" cellRecogType="20" cellNameEng="Reserve" cellName="保留" nOutputThreshold="0" nOutputNumber="0" bFormatResult="0" />
			<COutPutResult nIndex="1" cellRecogType="20" cellNameEng="Name" cellName="姓名" nOutputThreshold="0" nOutputNumber="0" bFormatResult="0" bMainField="1" nRejectThresh="35"/>
			<COutPutResult nIndex="2" cellRecogType="1" cellNameEng="Sex" cellName="性别" nOutputThreshold="0" nOutputNumber="0" bFormatResult="0" />
			<COutPutResult nIndex="3" cellRecogType="20" cellNameEng="Nationality" cellName="国籍" nOutputThreshold="0" nOutputNumber="0" bFormatResult="0" />
			<COutPutResult nIndex="4" cellRecogType="3" cellNameEng="Date of birth" cellName="出生日期" nOutputThreshold="0" nOutputNumber="0" bFormatResult="1" >
			<CFormatInfo strDefault="" strInFormat="YYYYMMDD" strOutFormat="YYYY-MM-DD" />
			</COutPutResult>
			<COutPutResult nIndex="5" cellRecogType="20" cellNameEng="Document number" cellName="证件号码" nOutputThreshold="0" nOutputNumber="0" bFormatResult="0" bMainField="1"/>
		</vecOutPutResult>
    </CIDCardTemplate>
  </IDCARD>