<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE IDCARD SYSTEM "IDCARD.dtd">
<IDCARD>
  <CIDCardTemplate nMainDocumentID="1004" chDocumentName="边境地区出入境通行证2005版-信息页" engDocumentName="China Border Exit and Entry Permit 2005 Edition Information Page" imageSizeType="8">
    <vecProcessImage>
      <CProcessImage processType="3">
        <CEraseBlackBorderEx>
          <!--processRect要检测黑边的区域-->
          <RECT Left="0" Top="0" Right="10000" Bottom="10000" />
          <!--unProcessRect在要检测的区域里，能够确定的不需要检测黑边的部分，










					也就是说这个区域肯定没有黑边存在，用来提高检测效率-->
          <RECT Left="2000" Top="2000" Right="8900" Bottom="8000" />
        </CEraseBlackBorderEx>
      </CProcessImage>
    </vecProcessImage>
    <vecRegion>
      <!--CRegion:区域信息
				nIndex:区域编号
				nRegionType:区域类型,0代表头像区域,1代表识别区域
				nProcessOrder:该区域被处理的顺序










				rcPosition 坐标均为占整张图像的百分比*10000
			-->
      <CRegion nIndex="0" nRegionType="1" nProcessOrder="0">
        <!--处理该区域需要的图像信息的光的类型-->
        <vecImageLightType>
          <!--1:可见光图;2:红外光图;4:紫外光图 -->
          <LIGHTTYPE>1</LIGHTTYPE>
          <LIGHTTYPE>2</LIGHTTYPE>
        </vecImageLightType>
        <!--定义区域的定位信息,如果是头像区域还需要进一步精确定位，识别区域就不用了-->
        <!--bAccurateLocate为1表示需要进一步精确定位,0代表不需要-->
        <CLocateRegion bAccurateLocate="0">
          <vecProcessImage></vecProcessImage>
          <!--rcMinRect:指定定位区域的最小范围，即定位后的区域范围必须包含这个区域-->
          <RECT Left="9999" Top="9999" Right="0" Bottom="0" />
          <vecAnchorLocateInfo>
            <!--nDisToAnchor的值也是整图的百分比*10000计算出来的-->
            <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="1314" anchorType="1" />
            <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="9231" anchorType="2" />
            <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="1699" anchorType="3" />
            <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="2387" anchorType="4" />
          </vecAnchorLocateInfo>
          <!--该区域定义的区域类型基准点的信息-->
          <vecCLocateAnchor></vecCLocateAnchor>
        </CLocateRegion>
        <CLocateLine>
          <!--rcHorizontal：进行行的左右边界定位时的区域范围，坐标单位为所在区域的百分比*100-->
          <RECT Left="0" Top="0" Right="100" Bottom="100" />
          <!--rcVertical：进行行的上下边界定位时的区域范围，坐标单位为所在区域的百分比*100-->
          <RECT Left="10" Top="0" Right="90" Bottom="100" />
          <!--nLocateMethod:0灰度变化的方式进行行定位;1投影方式进行行定位-->
          <!--bHeight:是否等高-->
          <!--bSpace:是否等间距-->
          <!--bWidth:是否等宽-->
          <!--nMinElementNum:该行最少元素数-->
          <!--nMaxElementNum:该行最多元素数-->
          <!--nMinWidth:元素的最小宽度-->
          <!--nMaxWidth:元素的最大宽度-->
          <!--nMinHeight:元素的最小高度-->
          <!--nMaxHeight:元素的最大高度-->
          <!--nMinSpace:元素间的最小间距-->
          <!--nMaxSpace:元素间的最大间距-->
          <CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="160" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="1" nMaxElementNum="2" nMinWidth="1000" nMaxWidth="8000" nMinHeight="200" nMaxHeight="360" nMinSpace="200" nMaxSpace="600" bPostProcess="0">
            <vecCLocateMethod>
              <CLocateMethod nLocateMethod="0">
                <!--在定位前进行的预处理信息，一般是二值化-->
                <vecProcessImage>
                  <CProcessImage processType="1">
                    <CTrueColorToGrayEx nFilter="0">
                      <RECT Top="0" Right="0" Bottom="0" Left="0" />
                    </CTrueColorToGrayEx>
                  </CProcessImage>
                </vecProcessImage>
              </CLocateMethod>
              <CLocateMethod nLocateMethod="1">
                <vecProcessImage>
                  <CProcessImage processType="1">
                    <CTrueColorToGrayEx nFilter="0">
                      <RECT Top="0" Right="0" Bottom="0" Left="0" />
                    </CTrueColorToGrayEx>
                  </CProcessImage>
                  <CProcessImage processType="2">
                    <CGrayToBinaryEx>
                      <vecBinaryParam>
                        <BINARYPARAM nBlockNum="1" nMethod="3" />
                      </vecBinaryParam>
                      <!--processRect-->
                      <RECT Left="0" Top="0" Right="0" Bottom="0" />
                    </CGrayToBinaryEx>
                  </CProcessImage>
                </vecProcessImage>
              </CLocateMethod>
            </vecCLocateMethod>
          </CLocateInfo>
          <!--采用定位算法对行定位后，边界要浮动的大小，可以为负数
					也是整图的百分比*10000计算出来的-->
          <positionPlus nLeftPlus="-120" nRightPlus="200" nTopPlus="-120" nBottomPlus="100" />
        </CLocateLine>
        <vecLine>
          <!--nIndex:该行在区域内是第几行，以第一行或者最后一行为基准从0开始的偏移-->
          <!--bStartOffset:如果是以区域的第一行为基准，该值为true,否则为false-->
          <!--bEndOffset:如果是以区域的最后一行为基准，该值为false，否则为false-->
          <!--nLineType:0代表不需要识别，1代表需要识别-->
          <CLine nIndex="1" bStartOffset="0" bEndOffset="1" bExist="0" bNeedRecog="0" nCheckKeyWord="0">
            <!--rcLineResult:行的初始位置信息，初始值尽量写最小的区域范围，这样最准确
						    如果都为0代表该值不可靠，坐标单位为坐标均为占整张图像的百分比*10000
						-->
            <RECT Left="0" Top="0" Right="0" Bottom="0" />
          <vecRecogInfo/>
</CLine>
          <CLine nIndex="0" bStartOffset="0" bEndOffset="1" bExist="1" bNeedRecog="1" nCheckKeyWord="0">
            <!--rcLineResult:行的初始位置信息，初始值尽量写最小的区域范围，这样最准确
						    如果都为0代表该值不可靠，坐标单位为坐标均为占整张图像的百分比*10000
						-->
            <RECT Left="0" Top="0" Right="0" Bottom="0" />
            <vecRecogInfo>
<CRecogInfo bIgnorePoint="0" nMaxPointWidth="0" nMaxPointHeight="0" bMatchRegExp="1" charOrder="\C{1,-1}" bConfirmParams="0" nProcessOrder="0" nKernelType="0">
              <!--定位字符的信息-->
              <!--定位字符的信息-->
              <!--nLocateMethod:  0,用识别核心做定位;
												1，提取连通域的方法进行定位;
												2，投影方法进行定位








							-->
              <!--nMinElementNum:该行最少元素数-->
              <!--nMaxElementNum:该行最多元素数-->
              <!--nMinWidth:元素的最小宽度-->
              <!--nMaxWidth:元素的最大宽度-->
              <!--nMinHeight:元素的最小高度-->
              <!--nMaxHeight:元素的最大高度-->
              <!--nMinSpace:元素间的最小间距-->
              <!--nMaxSpace:元素间的最大间距-->
              <CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="120" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="4" nMaxElementNum="-1" nMinWidth="200" nMaxWidth="380" nMinHeight="200" nMaxHeight="360" nMinSpace="0" nMaxSpace="400" bPostProcess="1">
                <vecCLocateMethod>
                  <CLocateMethod nLocateMethod="1">
                    <vecProcessImage>
                      <CProcessImage processType="1">
                        <CTrueColorToGrayEx nFilter="0">
                          <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
                        </CTrueColorToGrayEx>
                      </CProcessImage>
                      <CProcessImage processType="2">
                        <CGrayToBinaryEx>
                          <vecBinaryParam>
                            <BINARYPARAM nBlockNum="1" nMethod="7" />
                            <BINARYPARAM nBlockNum="1" nMethod="6" />
                          </vecBinaryParam>
                          <!--processRect-->
                          <RECT Left="0" Top="0" Right="0" Bottom="0" />
                        </CGrayToBinaryEx>
                      </CProcessImage>
                    </vecProcessImage>
                  </CLocateMethod>
                </vecCLocateMethod>
              </CLocateInfo>
              <vecKernal>
                <!--nRecogType:0识别区域，1识别字符-->
                <!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
                <CKernalInfo kernalMainType="1" nKernalSubType="7" nFilterType="256" nFillingMethod="1" strFilterPlus="" nRecogType="1" nRecogImgeType="0">
                  <vecCharRatio>
                    <CCharRatio strChars="" charType="3" nWHRatio="75" />
                  </vecCharRatio>
                </CKernalInfo>
                <CKernalInfo kernalMainType="1" nKernalSubType="6" nFilterType="0" nFillingMethod="1" strFilterPlus="" nRecogType="1" nRecogImgeType="0">
                  <vecCharRatio>
                    <CCharRatio strChars="" charType="3" nWHRatio="75" />
                  </vecCharRatio>
                </CKernalInfo>
              </vecKernal>
            </CRecogInfo>
</vecRecogInfo>
<!--nRecogType:0识别区域，1识别字符-->
            <!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
            <!--cellRecogType:识别内容
								NAMECH=0,//中文姓名
								SEX=1,//性别
								NATION=2,//民族
								BIRTHDAY=3,//出生日期
								ISSUINGDATE=4,//签发日期
								VALIDPERIOD=5,//有效期至
								ADDRESSS=6,//地址
								IDNUMBER=7,//身份证号码








								PPMRZ1=8,//护照类型证件的机读码第一行








								PPMRZ2=9,//护照类型证件的机读码第二行








								OTHER=10//其他类型
						-->
            <!--charOrder:字符的排列情况，用正则表达式表示-->
            <!--kernalMainType识别核心主类型 
								THOCR=1,
								SSFT152=2,
								BARCODE=3
						-->
            <!--vecRecogUnit:行内识别单元的信息-->
            <vecRecogUnit>
              <!--nIndex:识别单元序号-->
              <!--cellNameEng="" cellName:识别单元名称-->
              <!--bLocate:该识别单元是否需要定位-->
              <!--bReRecog:该识别单元是否需要重新识别-->
              <!--OutputThreshold:输出界限一，待输出的识别结果的字频的值不能低于该值-->
              <!--输出界限二，字频值< OutputThreshold的个数最大不能超过该值，否则将不输出-->
              <CRecogUnit nIndex="1" bLocate="0" bRecog="0">
                <vecRecogInfo/>
<vecCInsertChar>
                  <CInsertChar nCharPos="0" strInsert=" " nMinSpace="200" nMaxSpce="400" nInsertType="0" />
                </vecCInsertChar>
              </CRecogUnit>
            </vecRecogUnit>
          </CLine>
        </vecLine>
      </CRegion>
      <CRegion nIndex="1" nRegionType="1" nProcessOrder="1">
        <!--处理该区域需要的图像信息的光的类型-->
        <vecImageLightType>
          <!--1:可见光图;2:红外光图;4:紫外光图 -->
          <LIGHTTYPE>1</LIGHTTYPE>
          <LIGHTTYPE>2</LIGHTTYPE>
        </vecImageLightType>
        <!--定义区域的定位信息,如果是头像区域还需要进一步精确定位，识别区域就不用了-->
        <!--bAccurateLocate为1表示需要进一步精确定位,0代表不需要-->
        <CLocateRegion bAccurateLocate="0">
          <vecProcessImage></vecProcessImage>
          <!--rcMinRect:指定定位区域的最小范围，即定位后的区域范围必须包含这个区域-->
          <RECT Left="9999" Top="9999" Right="0" Bottom="0" />
          <vecAnchorLocateInfo>
            <!--nDisToAnchor的值也是整图的百分比*10000计算出来的-->
            <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="2144" anchorType="1" />
            <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="6473" anchorType="2" />
            <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="2845" anchorType="3" />
            <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="3438" anchorType="4" />
          </vecAnchorLocateInfo>
          <!--该区域定义的区域类型基准点的信息-->
          <vecCLocateAnchor></vecCLocateAnchor>
        </CLocateRegion>
        <CLocateLine>
          <!--rcHorizontal：进行行的左右边界定位时的区域范围，坐标单位为所在区域的百分比*100-->
          <RECT Left="0" Top="0" Right="100" Bottom="100" />
          <!--rcVertical：进行行的上下边界定位时的区域范围，坐标单位为所在区域的百分比*100-->
          <RECT Left="0" Top="0" Right="100" Bottom="100" />
          <!--nLocateMethod:0灰度变化的方式进行行定位;1投影方式进行行定位-->
          <!--bHeight:是否等高-->
          <!--bSpace:是否等间距-->
          <!--bWidth:是否等宽-->
          <!--nMinElementNum:该行最少元素数-->
          <!--nMaxElementNum:该行最多元素数-->
          <!--nMinWidth:元素的最小宽度-->
          <!--nMaxWidth:元素的最大宽度-->
          <!--nMinHeight:元素的最小高度-->
          <!--nMaxHeight:元素的最大高度-->
          <!--nMinSpace:元素间的最小间距-->
          <!--nMaxSpace:元素间的最大间距-->
          <CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="160" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="1" nMaxElementNum="1" nMinWidth="2000" nMaxWidth="4400" nMinHeight="250" nMaxHeight="400" nMinSpace="0" nMaxSpace="0" bPostProcess="0">
            <vecCLocateMethod>
              <CLocateMethod nLocateMethod="0">
                <!--在定位前进行的预处理信息，一般是二值化-->
                <vecProcessImage>
                  <CProcessImage processType="1">
                    <CTrueColorToGrayEx nFilter="0">
                      <RECT Top="0" Right="0" Bottom="0" Left="0" />
                    </CTrueColorToGrayEx>
                  </CProcessImage>
                </vecProcessImage>
              </CLocateMethod>
              <CLocateMethod nLocateMethod="1">
                <vecProcessImage>
                  <CProcessImage processType="1">
                    <CTrueColorToGrayEx nFilter="0">
                      <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
                    </CTrueColorToGrayEx>
                  </CProcessImage>
                  <CProcessImage processType="2">
                    <CGrayToBinaryEx>
                      <vecBinaryParam>
                        <BINARYPARAM nBlockNum="1" nMethod="3" />
                        <BINARYPARAM nBlockNum="2" nMethod="7" />
                      </vecBinaryParam>
                      <!--processRect-->
                      <RECT Left="0" Top="0" Right="0" Bottom="0" />
                    </CGrayToBinaryEx>
                  </CProcessImage>
                </vecProcessImage>
              </CLocateMethod>
            </vecCLocateMethod>
          </CLocateInfo>
          <!--采用定位算法对行定位后，边界要浮动的大小，可以为负数
					也是整图的百分比*10000计算出来的-->
          <positionPlus nLeftPlus="-120" nRightPlus="200" nTopPlus="-50" nBottomPlus="100" />
        </CLocateLine>
        <vecLine>
          <!--nIndex:该行在区域内是第几行，以第一行或者最后一行为基准从0开始的偏移-->
          <!--bStartOffset:如果是以区域的第一行为基准，该值为true,否则为false-->
          <!--bEndOffset:如果是以区域的最后一行为基准，该值为false，否则为false-->
          <!--nLineType:0代表不需要识别，1代表需要识别-->
          <CLine nIndex="0" bStartOffset="0" bEndOffset="1" bExist="1" bNeedRecog="0" nCheckKeyWord="0">
            <!--rcLineResult:行的初始位置信息，初始值尽量写最小的区域范围，这样最准确
						    如果都为0代表该值不可靠，坐标单位为坐标均为占整张图像的百分比*10000
						-->
            <RECT Left="0" Top="0" Right="0" Bottom="0" />
            <vecRecogInfo/>
<!--vecRecogUnit:行内识别单元的信息-->
            <vecRecogUnit>
              <!--nIndex:识别单元序号-->
              <!--cellNameEng="" cellName:识别单元名称-->
              <!--bLocate:该识别单元是否需要定位-->
              <!--bReRecog:该识别单元是否需要重新识别-->
              <!--OutputThreshold:输出界限一，待输出的识别结果的字频的值不能低于该值-->
              <!--输出界限二，字频值< OutputThreshold的个数最大不能超过该值，否则将不输出-->
              <CRecogUnit nIndex="2" bLocate="1" bRecog="1">
                <CLocateRecogUnit bStart="0" nStartIndexInChar="-1" bEnd="0" nEndIndexInChar="-1">
                  <vecAnchorLocateInfo>
                    <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="3381" anchorType="1" />
                    <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="5004" anchorType="2" />
                  </vecAnchorLocateInfo>
                </CLocateRecogUnit>
                <vecRecogInfo>
<CRecogInfo bIgnorePoint="0" nMaxPointWidth="0" nMaxPointHeight="0" bMatchRegExp="1" charOrder="[FM]" bConfirmParams="0" nProcessOrder="0" nKernelType="0">
                  <CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="120" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="1" nMaxElementNum="1" nMinWidth="200" nMaxWidth="460" nMinHeight="400" nMaxHeight="680" nMinSpace="0" nMaxSpace="0" bPostProcess="1">
                    <vecCLocateMethod>
                      <CLocateMethod nLocateMethod="1">
                        <vecProcessImage>
                          <CProcessImage processType="1">
                            <CTrueColorToGrayEx nFilter="0">
                              <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
                            </CTrueColorToGrayEx>
                          </CProcessImage>
                          <CProcessImage processType="2">
                            <CGrayToBinaryEx>
                              <vecBinaryParam>
                                <BINARYPARAM nBlockNum="1" nMethod="7" />
                                <BINARYPARAM nBlockNum="1" nMethod="3" />
                              </vecBinaryParam>
                              <!--processRect-->
                              <RECT Left="0" Top="0" Right="0" Bottom="0" />
                            </CGrayToBinaryEx>
                          </CProcessImage>
                        </vecProcessImage>
                      </CLocateMethod>
                    </vecCLocateMethod>
                  </CLocateInfo>
                  <vecKernal>
                    <!--nRecogType:0识别区域，1识别字符-->
                    <!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
                    <CKernalInfo kernalMainType="1" nKernalSubType="7" nFilterType="256" nFillingMethod="1" strFilterPlus="" nRecogType="1" nRecogImgeType="0">
                      <vecCharRatio>
                        <CCharRatio strChars="FM" charType="10" nWHRatio="70" />
                      </vecCharRatio>
                    </CKernalInfo>
                    <CKernalInfo kernalMainType="1" nKernalSubType="6" nFilterType="0" nFillingMethod="1" strFilterPlus="" nRecogType="1" nRecogImgeType="0">
                      <vecCharRatio>
                        <CCharRatio strChars="FM" charType="10" nWHRatio="70" />
                      </vecCharRatio>
                    </CKernalInfo>
                  </vecKernal>
                </CRecogInfo>
</vecRecogInfo>
</CRecogUnit>
            </vecRecogUnit>
          </CLine>
        </vecLine>
      </CRegion>
      <CRegion nIndex="2" nRegionType="1" nProcessOrder="2">
        <!--处理该区域需要的图像信息的光的类型-->
        <vecImageLightType>
          <!--1:可见光图;2:红外光图;4:紫外光图 -->
          <LIGHTTYPE>1</LIGHTTYPE>
          <LIGHTTYPE>2</LIGHTTYPE>
        </vecImageLightType>
        <!--定义区域的定位信息,如果是头像区域还需要进一步精确定位，识别区域就不用了-->
        <!--bAccurateLocate为1表示需要进一步精确定位,0代表不需要-->
        <CLocateRegion bAccurateLocate="0">
          <vecProcessImage></vecProcessImage>
          <!--rcMinRect:指定定位区域的最小范围，即定位后的区域范围必须包含这个区域-->
          <RECT Left="9999" Top="9999" Right="0" Bottom="0" />
          <vecAnchorLocateInfo>
            <!--nDisToAnchor的值也是整图的百分比*10000计算出来的-->
            <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="1874" anchorType="1" />
            <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="7439" anchorType="2" />
            <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="5016" anchorType="3" />
            <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="5596" anchorType="4" />
          </vecAnchorLocateInfo>
          <!--该区域定义的区域类型基准点的信息-->
          <vecCLocateAnchor></vecCLocateAnchor>
        </CLocateRegion>
        <CLocateLine>
          <!--rcHorizontal：进行行的左右边界定位时的区域范围，坐标单位为所在区域的百分比*100-->
          <RECT Left="0" Top="0" Right="100" Bottom="100" />
          <!--rcVertical：进行行的上下边界定位时的区域范围，坐标单位为所在区域的百分比*100-->
          <RECT Left="0" Top="0" Right="90" Bottom="100" />
          <!--nLocateMethod:0灰度变化的方式进行行定位;1投影方式进行行定位-->
          <!--bHeight:是否等高-->
          <!--bSpace:是否等间距-->
          <!--bWidth:是否等宽-->
          <!--nMinElementNum:该行最少元素数-->
          <!--nMaxElementNum:该行最多元素数-->
          <!--nMinWidth:元素的最小宽度-->
          <!--nMaxWidth:元素的最大宽度-->
          <!--nMinHeight:元素的最小高度-->
          <!--nMaxHeight:元素的最大高度-->
          <!--nMinSpace:元素间的最小间距-->
          <!--nMaxSpace:元素间的最大间距-->
          <CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="160" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="1" nMaxElementNum="1" nMinWidth="2000" nMaxWidth="5700" nMinHeight="240" nMaxHeight="400" nMinSpace="0" nMaxSpace="0" bPostProcess="0">
            <vecCLocateMethod>
              <CLocateMethod nLocateMethod="0">
                <!--在定位前进行的预处理信息，一般是二值化-->
                <vecProcessImage>
                  <CProcessImage processType="1">
                    <CTrueColorToGrayEx nFilter="0">
                      <RECT Top="0" Right="0" Bottom="0" Left="0" />
                    </CTrueColorToGrayEx>
                  </CProcessImage>
                </vecProcessImage>
              </CLocateMethod>
              <CLocateMethod nLocateMethod="1">
                <vecProcessImage>
                  <CProcessImage processType="1">
                    <CTrueColorToGrayEx nFilter="0">
                      <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
                    </CTrueColorToGrayEx>
                  </CProcessImage>
                  <CProcessImage processType="2">
                    <CGrayToBinaryEx>
                      <vecBinaryParam>
                        <BINARYPARAM nBlockNum="1" nMethod="3" />
                        <BINARYPARAM nBlockNum="2" nMethod="7" />
                      </vecBinaryParam>
                      <!--processRect-->
                      <RECT Left="0" Top="0" Right="0" Bottom="0" />
                    </CGrayToBinaryEx>
                  </CProcessImage>
                </vecProcessImage>
              </CLocateMethod>
            </vecCLocateMethod>
          </CLocateInfo>
          <!--采用定位算法对行定位后，边界要浮动的大小，可以为负数
					也是整图的百分比*10000计算出来的-->
          <positionPlus nLeftPlus="-120" nRightPlus="200" nTopPlus="-50" nBottomPlus="100" />
        </CLocateLine>
        <vecLine>
          <!--nIndex:该行在区域内是第几行，以第一行或者最后一行为基准从0开始的偏移-->
          <!--bStartOffset:如果是以区域的第一行为基准，该值为true,否则为false-->
          <!--bEndOffset:如果是以区域的最后一行为基准，该值为false，否则为false-->
          <!--nLineType:0代表不需要识别，1代表需要识别-->
          <CLine nIndex="0" bStartOffset="0" bEndOffset="1" bExist="1" bNeedRecog="0" nCheckKeyWord="0">
            <!--rcLineResult:行的初始位置信息，初始值尽量写最小的区域范围，这样最准确
						    如果都为0代表该值不可靠，坐标单位为坐标均为占整张图像的百分比*10000
						-->
            <RECT Left="0" Top="0" Right="0" Bottom="0" />
            <vecRecogInfo/>
<!--vecRecogUnit:行内识别单元的信息-->
            <vecRecogUnit>
              <!--nIndex:识别单元序号-->
              <!--cellNameEng="" cellName:识别单元名称-->
              <!--bLocate:该识别单元是否需要定位-->
              <!--bReRecog:该识别单元是否需要重新识别-->
              <!--OutputThreshold:输出界限一，待输出的识别结果的字频的值不能低于该值-->
              <!--输出界限二，字频值< OutputThreshold的个数最大不能超过该值，否则将不输出-->
              <CRecogUnit nIndex="3" bLocate="1" bRecog="1">
                <CLocateRecogUnit bStart="0" nStartIndexInChar="-1" bEnd="1" nEndIndexInChar="0">
                  <vecAnchorLocateInfo>
                    <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="4040" anchorType="1" />
                  </vecAnchorLocateInfo>
                </CLocateRecogUnit>
                <vecRecogInfo>
<CRecogInfo bIgnorePoint="0" nMaxPointWidth="0" nMaxPointHeight="0" bMatchRegExp="1" charOrder="[12]\D{3}-[01]\D-[0123]\D" bConfirmParams="0" nProcessOrder="0" nKernelType="0">
                  <!--定位字符的信息-->
                  <!--nLocateMethod:  0,用识别核心做定位;
														1，提取连通域的方法进行定位;
														2，投影方法进行定位-->
                  <!--bHeight:是否等高-->
                  <!--bSpace:是否等间距-->
                  <!--bWidth:是否等宽-->
                  <!--nMinElementNum:该行最少元素数-->
                  <!--nMaxElementNum:该行最多元素数-->
                  <!--nMinWidth:元素的最小宽度-->
                  <!--nMaxWidth:元素的最大宽度-->
                  <!--nMinHeight:元素的最小高度-->
                  <!--nMaxHeight:元素的最大高度-->
                  <!--nMinSpace:元素间的最小间距-->
                  <!--nMaxSpace:元素间的最大间距-->
                  <CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="100" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="10" nMaxElementNum="10" nMinWidth="40" nMaxWidth="300" nMinHeight="40" nMaxHeight="400" nMinSpace="0" nMaxSpace="180" bPostProcess="1">
                    <vecCLocateMethod>
                      <CLocateMethod nLocateMethod="1">
                        <vecProcessImage>
                          <CProcessImage processType="1">
                            <CTrueColorToGrayEx nFilter="0">
                              <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
                            </CTrueColorToGrayEx>
                          </CProcessImage>
                          <CProcessImage processType="2">
                            <CGrayToBinaryEx>
                              <vecBinaryParam>
                                <BINARYPARAM nBlockNum="2" nMethod="7" />
                                <BINARYPARAM nBlockNum="1" nMethod="3" />
                              </vecBinaryParam>
                              <!--processRect-->
                              <RECT Left="0" Top="0" Right="0" Bottom="0" />
                            </CGrayToBinaryEx>
                          </CProcessImage>
                        </vecProcessImage>
                      </CLocateMethod>
                      <CLocateMethod nLocateMethod="1">
                        <vecProcessImage>
                          <CProcessImage processType="1">
                            <CTrueColorToGrayEx nFilter="0">
                              <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
                            </CTrueColorToGrayEx>
                          </CProcessImage>
                          <CProcessImage processType="2">
                            <CGrayToBinaryEx>
                              <vecBinaryParam>
                                <BINARYPARAM nBlockNum="1" nMethod="6" />
                              </vecBinaryParam>
                              <!--processRect-->
                              <RECT Left="0" Top="0" Right="0" Bottom="0" />
                            </CGrayToBinaryEx>
                          </CProcessImage>
                        </vecProcessImage>
                      </CLocateMethod>
                    </vecCLocateMethod>
                  </CLocateInfo>
                  <vecKernal>
                    <!--nRecogType:0识别区域，1识别字符-->
                    <!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
                    <CKernalInfo kernalMainType="1" nKernalSubType="10" nFilterType="7" nFillingMethod="1" strFilterPlus="" nRecogType="1" nRecogImgeType="0">
                      <vecCharRatio>
                        <CCharRatio strChars="" charType="2" nWHRatio="63" />
                        <CCharRatio strChars="-" charType="10" nWHRatio="200" />
                      </vecCharRatio>
                    </CKernalInfo>
                  </vecKernal>
                </CRecogInfo>
</vecRecogInfo>
</CRecogUnit>
            </vecRecogUnit>
          </CLine>
        </vecLine>
      </CRegion>
      <CRegion nIndex="3" nRegionType="1" nProcessOrder="3">
        <!--处理该区域需要的图像信息的光的类型-->
        <vecImageLightType>
          <!--1:可见光图;2:红外光图;4:紫外光图 -->
          <LIGHTTYPE>1</LIGHTTYPE>
          <LIGHTTYPE>2</LIGHTTYPE>
        </vecImageLightType>
        <!--定义区域的定位信息,如果是头像区域还需要进一步精确定位，识别区域就不用了-->
        <!--bAccurateLocate为1表示需要进一步精确定位,0代表不需要-->
        <CLocateRegion bAccurateLocate="0">
          <vecProcessImage></vecProcessImage>
          <!--rcMinRect:指定定位区域的最小范围，即定位后的区域范围必须包含这个区域-->
          <RECT Left="9999" Top="9999" Right="0" Bottom="0" />
          <vecAnchorLocateInfo>
            <!--nDisToAnchor的值也是整图的百分比*10000计算出来的-->
            <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="3169" anchorType="1" />
            <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="6956" anchorType="2" />
            <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="7120" anchorType="3" />
            <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="7741" anchorType="4" />
          </vecAnchorLocateInfo>
          <!--该区域定义的区域类型基准点的信息-->
          <vecCLocateAnchor></vecCLocateAnchor>
        </CLocateRegion>
        <CLocateLine>
          <!--rcHorizontal：进行行的左右边界定位时的区域范围，坐标单位为所在区域的百分比*100-->
          <RECT Left="0" Top="0" Right="100" Bottom="100" />
          <!--rcVertical：进行行的上下边界定位时的区域范围，坐标单位为所在区域的百分比*100-->
          <RECT Left="0" Top="0" Right="90" Bottom="100" />
          <!--nLocateMethod:0灰度变化的方式进行行定位;1投影方式进行行定位-->
          <!--bHeight:是否等高-->
          <!--bSpace:是否等间距-->
          <!--bWidth:是否等宽-->
          <!--nMinElementNum:该行最少元素数-->
          <!--nMaxElementNum:该行最多元素数-->
          <!--nMinWidth:元素的最小宽度-->
          <!--nMaxWidth:元素的最大宽度-->
          <!--nMinHeight:元素的最小高度-->
          <!--nMaxHeight:元素的最大高度-->
          <!--nMinSpace:元素间的最小间距-->
          <!--nMaxSpace:元素间的最大间距-->
          <CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="160" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="1" nMaxElementNum="1" nMinWidth="2000" nMaxWidth="4000" nMinHeight="240" nMaxHeight="400" nMinSpace="0" nMaxSpace="0" bPostProcess="0">
            <vecCLocateMethod>
              <CLocateMethod nLocateMethod="0">
                <!--在定位前进行的预处理信息，一般是二值化-->
                <vecProcessImage>
                  <CProcessImage processType="1">
                    <CTrueColorToGrayEx nFilter="0">
                      <RECT Top="0" Right="0" Bottom="0" Left="0" />
                    </CTrueColorToGrayEx>
                  </CProcessImage>
                </vecProcessImage>
              </CLocateMethod>
              <CLocateMethod nLocateMethod="1">
                <vecProcessImage>
                  <CProcessImage processType="1">
                    <CTrueColorToGrayEx nFilter="0">
                      <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
                    </CTrueColorToGrayEx>
                  </CProcessImage>
                  <CProcessImage processType="2">
                    <CGrayToBinaryEx>
                      <vecBinaryParam>
                        <BINARYPARAM nBlockNum="1" nMethod="3" />
                        <BINARYPARAM nBlockNum="2" nMethod="7" />
                      </vecBinaryParam>
                      <!--processRect-->
                      <RECT Left="0" Top="0" Right="0" Bottom="0" />
                    </CGrayToBinaryEx>
                  </CProcessImage>
                </vecProcessImage>
              </CLocateMethod>
            </vecCLocateMethod>
          </CLocateInfo>
          <!--采用定位算法对行定位后，边界要浮动的大小，可以为负数
					也是整图的百分比*10000计算出来的-->
          <positionPlus nLeftPlus="-120" nRightPlus="200" nTopPlus="-50" nBottomPlus="100" />
        </CLocateLine>
        <vecLine>
          <!--nIndex:该行在区域内是第几行，以第一行或者最后一行为基准从0开始的偏移-->
          <!--bStartOffset:如果是以区域的第一行为基准，该值为true,否则为false-->
          <!--bEndOffset:如果是以区域的最后一行为基准，该值为false，否则为false-->
          <!--nLineType:0代表不需要识别，1代表需要识别-->
          <CLine nIndex="0" bStartOffset="0" bEndOffset="1" bExist="1" bNeedRecog="0" nCheckKeyWord="0">
            <!--rcLineResult:行的初始位置信息，初始值尽量写最小的区域范围，这样最准确
						    如果都为0代表该值不可靠，坐标单位为坐标均为占整张图像的百分比*10000
						-->
            <RECT Left="0" Top="0" Right="0" Bottom="0" />
            <vecRecogInfo/>
<!--vecRecogUnit:行内识别单元的信息-->
            <vecRecogUnit>
              <!--nIndex:识别单元序号-->
              <!--cellNameEng="" cellName:识别单元名称-->
              <!--bLocate:该识别单元是否需要定位-->
              <!--bReRecog:该识别单元是否需要重新识别-->
              <!--OutputThreshold:输出界限一，待输出的识别结果的字频的值不能低于该值-->
              <!--输出界限二，字频值< OutputThreshold的个数最大不能超过该值，否则将不输出-->
              <CRecogUnit nIndex="4" bLocate="0" bRecog="1">
                <vecRecogInfo>
<CRecogInfo bIgnorePoint="0" nMaxPointWidth="0" nMaxPointHeight="0" bMatchRegExp="1" charOrder="\C{2}-\D{7}" bConfirmParams="0" nProcessOrder="0" nKernelType="0">
                  <!--定位字符的信息-->
                  <!--nLocateMethod:  0,用识别核心做定位;
														1，提取连通域的方法进行定位;
														2，投影方法进行定位-->
                  <!--bHeight:是否等高-->
                  <!--bSpace:是否等间距-->
                  <!--bWidth:是否等宽-->
                  <!--nMinElementNum:该行最少元素数-->
                  <!--nMaxElementNum:该行最多元素数-->
                  <!--nMinWidth:元素的最小宽度-->
                  <!--nMaxWidth:元素的最大宽度-->
                  <!--nMinHeight:元素的最小高度-->
                  <!--nMaxHeight:元素的最大高度-->
                  <!--nMinSpace:元素间的最小间距-->
                  <!--nMaxSpace:元素间的最大间距-->
                  <CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="100" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="10" nMaxElementNum="10" nMinWidth="40" nMaxWidth="300" nMinHeight="40" nMaxHeight="400" nMinSpace="0" nMaxSpace="180" bPostProcess="1">
                    <vecCLocateMethod>
                      <CLocateMethod nLocateMethod="1">
                        <vecProcessImage>
                          <CProcessImage processType="1">
                            <CTrueColorToGrayEx nFilter="0">
                              <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
                            </CTrueColorToGrayEx>
                          </CProcessImage>
                          <CProcessImage processType="2">
                            <CGrayToBinaryEx>
                              <vecBinaryParam>
                                <BINARYPARAM nBlockNum="2" nMethod="7" />
                                <BINARYPARAM nBlockNum="1" nMethod="3" />
                              </vecBinaryParam>
                              <!--processRect-->
                              <RECT Left="0" Top="0" Right="0" Bottom="0" />
                            </CGrayToBinaryEx>
                          </CProcessImage>
                        </vecProcessImage>
                      </CLocateMethod>
                      <CLocateMethod nLocateMethod="1">
                        <vecProcessImage>
                          <CProcessImage processType="1">
                            <CTrueColorToGrayEx nFilter="0">
                              <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
                            </CTrueColorToGrayEx>
                          </CProcessImage>
                          <CProcessImage processType="2">
                            <CGrayToBinaryEx>
                              <vecBinaryParam>
                                <BINARYPARAM nBlockNum="1" nMethod="6" />
                              </vecBinaryParam>
                              <!--processRect-->
                              <RECT Left="0" Top="0" Right="0" Bottom="0" />
                            </CGrayToBinaryEx>
                          </CProcessImage>
                        </vecProcessImage>
                      </CLocateMethod>
                    </vecCLocateMethod>
                  </CLocateInfo>
                  <vecKernal>
                    <!--nRecogType:0识别区域，1识别字符-->
                    <!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
                    <CKernalInfo kernalMainType="1" nKernalSubType="10" nFilterType="7" nFillingMethod="1" strFilterPlus="" nRecogType="1" nRecogImgeType="0">
                      <vecCharRatio>
                        <CCharRatio strChars="" charType="2" nWHRatio="63" />
                        <CCharRatio strChars="" charType="3" nWHRatio="63" />
                        <CCharRatio strChars="-" charType="10" nWHRatio="200" />
                      </vecCharRatio>
                    </CKernalInfo>
                  </vecKernal>
                </CRecogInfo>
</vecRecogInfo>
</CRecogUnit>
            </vecRecogUnit>
          </CLine>
        </vecLine>
      </CRegion>
      <CRegion nIndex="4" nRegionType="1" nProcessOrder="4">
        <!--处理该区域需要的图像信息的光的类型-->
        <vecImageLightType>
          <!--1:可见光图;2:红外光图;4:紫外光图 -->
          <LIGHTTYPE>1</LIGHTTYPE>
          <LIGHTTYPE>2</LIGHTTYPE>
        </vecImageLightType>
        <!--定义区域的定位信息,如果是头像区域还需要进一步精确定位，识别区域就不用了-->
        <!--bAccurateLocate为1表示需要进一步精确定位,0代表不需要-->
        <CLocateRegion bAccurateLocate="0">
          <vecProcessImage></vecProcessImage>
          <!--rcMinRect:指定定位区域的最小范围，即定位后的区域范围必须包含这个区域-->
          <RECT Left="9999" Top="9999" Right="0" Bottom="0" />
          <vecAnchorLocateInfo>
            <!--nDisToAnchor的值也是整图的百分比*10000计算出来的-->
            <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="3700" anchorType="1" />
            <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="8541" anchorType="2" />
            <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="8725" anchorType="3" />
            <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="9700" anchorType="4" />
          </vecAnchorLocateInfo>
          <!--该区域定义的区域类型基准点的信息-->
          <vecCLocateAnchor></vecCLocateAnchor>
        </CLocateRegion>
        <CLocateLine>
          <!--rcHorizontal：进行行的左右边界定位时的区域范围，坐标单位为所在区域的百分比*100-->
          <RECT Left="0" Top="0" Right="100" Bottom="100" />
          <!--rcVertical：进行行的上下边界定位时的区域范围，坐标单位为所在区域的百分比*100-->
          <RECT Left="10" Top="0" Right="90" Bottom="100" />
          <!--nLocateMethod:0灰度变化的方式进行行定位;1投影方式进行行定位-->
          <!--bHeight:是否等高-->
          <!--bSpace:是否等间距-->
          <!--bWidth:是否等宽-->
          <!--nMinElementNum:该行最少元素数-->
          <!--nMaxElementNum:该行最多元素数-->
          <!--nMinWidth:元素的最小宽度-->
          <!--nMaxWidth:元素的最大宽度-->
          <!--nMinHeight:元素的最小高度-->
          <!--nMaxHeight:元素的最大高度-->
          <!--nMinSpace:元素间的最小间距-->
          <!--nMaxSpace:元素间的最大间距-->
          <CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="160" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="1" nMaxElementNum="1" nMinWidth="1000" nMaxWidth="4900" nMinHeight="220" nMaxHeight="400" nMinSpace="0" nMaxSpace="0" bPostProcess="0">
            <vecCLocateMethod>
              <CLocateMethod nLocateMethod="0">
                <!--在定位前进行的预处理信息，一般是二值化-->
                <vecProcessImage>
                  <CProcessImage processType="1">
                    <CTrueColorToGrayEx nFilter="0">
                      <RECT Top="0" Right="0" Bottom="0" Left="0" />
                    </CTrueColorToGrayEx>
                  </CProcessImage>
                </vecProcessImage>
              </CLocateMethod>
              <CLocateMethod nLocateMethod="1">
                <vecProcessImage>
                  <CProcessImage processType="1">
                    <CTrueColorToGrayEx nFilter="0">
                      <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
                    </CTrueColorToGrayEx>
                  </CProcessImage>
                  <CProcessImage processType="2">
                    <CGrayToBinaryEx>
                      <vecBinaryParam>
                        <BINARYPARAM nBlockNum="1" nMethod="3" />
                        <BINARYPARAM nBlockNum="2" nMethod="7" />
                      </vecBinaryParam>
                      <!--processRect-->
                      <RECT Left="0" Top="0" Right="0" Bottom="0" />
                    </CGrayToBinaryEx>
                  </CProcessImage>
                </vecProcessImage>
              </CLocateMethod>
            </vecCLocateMethod>
          </CLocateInfo>
          <!--采用定位算法对行定位后，边界要浮动的大小，可以为负数
					也是整图的百分比*10000计算出来的-->
          <positionPlus nLeftPlus="-120" nRightPlus="200" nTopPlus="-50" nBottomPlus="100" />
        </CLocateLine>
        <vecLine>
          <!--nIndex:该行在区域内是第几行，以第一行或者最后一行为基准从0开始的偏移-->
          <!--bStartOffset:如果是以区域的第一行为基准，该值为true,否则为false-->
          <!--bEndOffset:如果是以区域的最后一行为基准，该值为false，否则为false-->
          <!--nLineType:0代表不需要识别，1代表需要识别-->
          <CLine nIndex="0" bStartOffset="0" bEndOffset="1" bExist="1" bNeedRecog="0" nCheckKeyWord="0">
            <!--rcLineResult:行的初始位置信息，初始值尽量写最小的区域范围，这样最准确
						    如果都为0代表该值不可靠，坐标单位为坐标均为占整张图像的百分比*10000
						-->
            <RECT Left="0" Top="0" Right="0" Bottom="0" />
            <vecRecogInfo/>
<!--vecRecogUnit:行内识别单元的信息-->
            <vecRecogUnit>
              <!--nIndex:识别单元序号-->
              <!--cellNameEng="" cellName:识别单元名称-->
              <!--bLocate:该识别单元是否需要定位-->
              <!--bReRecog:该识别单元是否需要重新识别-->
              <!--OutputThreshold:输出界限一，待输出的识别结果的字频的值不能低于该值-->
              <!--输出界限二，字频值< OutputThreshold的个数最大不能超过该值，否则将不输出-->
              <CRecogUnit nIndex="5" bLocate="0" bRecog="1">
                <vecRecogInfo>
<CRecogInfo bIgnorePoint="0" nMaxPointWidth="0" nMaxPointHeight="0" bMatchRegExp="0" charOrder="" bConfirmParams="0" nProcessOrder="0" nKernelType="0">
                  <!--定位字符的信息-->
                  <!--nLocateMethod:  0,用识别核心做定位;
														1，提取连通域的方法进行定位;
														2，投影方法进行定位-->
                  <!--bHeight:是否等高-->
                  <!--bSpace:是否等间距-->
                  <!--bWidth:是否等宽-->
                  <!--nMinElementNum:该行最少元素数-->
                  <!--nMaxElementNum:该行最多元素数-->
                  <!--nMinWidth:元素的最小宽度-->
                  <!--nMaxWidth:元素的最大宽度-->
                  <!--nMinHeight:元素的最小高度-->
                  <!--nMaxHeight:元素的最大高度-->
                  <!--nMinSpace:元素间的最小间距-->
                  <!--nMaxSpace:元素间的最大间距-->
                  <CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="100" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="5" nMaxElementNum="-1" nMinWidth="40" nMaxWidth="300" nMinHeight="30" nMaxHeight="400" nMinSpace="0" nMaxSpace="300" bPostProcess="1">
                    <vecCLocateMethod>
                      <CLocateMethod nLocateMethod="1">
                        <vecProcessImage>
                          <CProcessImage processType="1">
                            <CTrueColorToGrayEx nFilter="0">
                              <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
                            </CTrueColorToGrayEx>
                          </CProcessImage>
                          <CProcessImage processType="2">
                            <CGrayToBinaryEx>
                              <vecBinaryParam>
                                <BINARYPARAM nBlockNum="2" nMethod="7" />
                                <BINARYPARAM nBlockNum="1" nMethod="3" />
                              </vecBinaryParam>
                              <!--processRect-->
                              <RECT Left="0" Top="0" Right="0" Bottom="0" />
                            </CGrayToBinaryEx>
                          </CProcessImage>
                        </vecProcessImage>
                      </CLocateMethod>
                      <CLocateMethod nLocateMethod="1">
                        <vecProcessImage>
                          <CProcessImage processType="1">
                            <CTrueColorToGrayEx nFilter="0">
                              <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
                            </CTrueColorToGrayEx>
                          </CProcessImage>
                          <CProcessImage processType="2">
                            <CGrayToBinaryEx>
                              <vecBinaryParam>
                                <BINARYPARAM nBlockNum="1" nMethod="6" />
                              </vecBinaryParam>
                              <!--processRect-->
                              <RECT Left="0" Top="0" Right="0" Bottom="0" />
                            </CGrayToBinaryEx>
                          </CProcessImage>
                        </vecProcessImage>
                      </CLocateMethod>
                    </vecCLocateMethod>
                  </CLocateInfo>
                  <vecKernal>
                    <!--nRecogType:0识别区域，1识别字符-->
                    <!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
                    <CKernalInfo kernalMainType="1" nKernalSubType="10" nFilterType="7" nFillingMethod="1" strFilterPlus="" nRecogType="1" nRecogImgeType="0">
                      <vecCharRatio>
                        <CCharRatio strChars="-" charType="10" nWHRatio="200" />
                      </vecCharRatio>
                    </CKernalInfo>
                    <CKernalInfo kernalMainType="1" nKernalSubType="7" nFilterType="256" nFillingMethod="1" strFilterPlus="" nRecogType="1" nRecogImgeType="0">
                      <vecCharRatio>
                        <CCharRatio strChars="" charType="2" nWHRatio="63" />
                        <CCharRatio strChars="" charType="4" nWHRatio="63" />
                        <CCharRatio strChars="-" charType="10" nWHRatio="200" />
                      </vecCharRatio>
                    </CKernalInfo>
                  </vecKernal>
                </CRecogInfo>
</vecRecogInfo>
</CRecogUnit>
            </vecRecogUnit>
          </CLine>
        </vecLine>
      </CRegion>
    </vecRegion>
    <!--vecCLocateAnchor:该证件的所有的基准点的信息-->
    <!--anchorType:基准点类型，取值如下








			ZEROANCHOR=0,//(0,0)基准
			LEFT=1,//左边
			RIGHT=2,//右边
			TOP=3,//上边
			BOTTOM=4,//下边
		-->
    <vecAnchor>
      <!--0基准点-->
      <CAnchor nIndex="0" anchorType="0" anchorPos="0" bEnable="0" nMinPos="-1" nMaxPos="-1" />
    </vecAnchor>
    <vecOutPutResult>
      <COutPutResult nIndex="0" cellRecogType="20" cellNameEng="Reserve" cellName="保留" nOutputThreshold="0" nOutputNumber="0" bFormatResult="0" />
      <COutPutResult nIndex="1" cellRecogType="20" cellNameEng="Name" cellName="姓名" nOutputThreshold="0" nOutputNumber="0" bFormatResult="0" />
      <COutPutResult nIndex="2" cellRecogType="1" cellNameEng="Sex" cellName="性别" nOutputThreshold="0" nOutputNumber="0" bFormatResult="0" />
      <COutPutResult nIndex="3" cellRecogType="3" cellNameEng="Date of birth" cellName="出生日期" nOutputThreshold="0" nOutputNumber="0" bFormatResult="1" bMainField="1" nRejectThresh="30">
        <CFormatInfo strDefault="" strInFormat="YYYY-MM-DD" strOutFormat="YYYY-MM-DD" />
      </COutPutResult>
      <COutPutResult nIndex="4" cellRecogType="20" cellNameEng="ID number" cellName="身份证号码" nOutputThreshold="0" nOutputNumber="0" bFormatResult="0" bMainField="1" nRejectThresh="30"></COutPutResult>
      <COutPutResult nIndex="5" cellRecogType="20" cellNameEng="Address" cellName="地址" nOutputThreshold="0" nOutputNumber="0" bFormatResult="0" />
    </vecOutPutResult>
  </CIDCardTemplate>
 </IDCARD>